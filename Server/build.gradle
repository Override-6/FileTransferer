plugins {
    id 'java-library'
    id 'java-test-fixtures'
    id 'scala'
}

group 'fr.linkit'
version '1.0Alpha ' + new Date().format("yyyyMMdd HH-mm-ss")

repositories {
    mavenCentral()
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ["-feature", "-language:implicitConversions", "-language:postfixOps", "-language:existentials"]
}

jar {
    manifest {
        attributes(
                'Main-Class': 'fr.linkit.server.ServerLauncher',
                'Can-Redefine-Classes': true
        )
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}
test {
    useJUnitPlatform()
}

dependencies {
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.8.0-M1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.8.0-M1'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.8.0-M1'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-suite-api', version: '1.8.0-M1'
    testImplementation group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.8.0-M1'
    testImplementation project(':API').sourceSets.test.output
    testImplementation project(':Engine').sourceSets.test.output

    implementation group: 'org.scala-lang', name: 'scala-library', version: '2.13.6'
    implementation group: 'org.scala-lang', name: 'scala-reflect', version: '2.13.6'
    implementation group: 'log4j', name: 'log4j', version: '1.2.17'
    implementation group: 'org.jetbrains', name: 'annotations', version: '16.0.1'

    api project(':API')
    api project(':Engine')
    implementation project(':LinkitPlugins:DebugPlugin')
    implementation project(':LinkitPlugins:CLICommands')
}
